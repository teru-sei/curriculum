■ 開発
ウォーターフォール開発
	開発手順を1つずつ確認しながら工程を進めていく手法、次のフェーズに進んでしまうと後戻りができない手法
	スケジュールを立てやすい、予算やSEの手配がスムーズに行える、進行中に問題発生した時に手間がかかる、成果物作成に時間がかかる
アジャイル開発
	クライアントの要望に応えるシステムをできる限り素早くリリースしようという考えに基づいている開発手法
	1.要件定義　2.基本設計　3.詳細設計　4.実装　5.単体テスト　6.結合テスト　7.総合テスト　8.受入テスト
（参考画像　https://backlog.com/wp-blog-app/uploads/sites/6/2019/10/article-image02-2.png）

マイグレーション（Migration）
	既存システムやソフトウェア、データなどを別の環境に移転したり、新しい環境に移行すること
デグレーション（degradation）
	プログラムの不具合を修正したときに、ほかに新たな不具合が出てくること
デプロイ（deploy）
	開発したソフトウェアを実際の運用環境に配置・展開して実用に供すること
コンフリクト（Conflict）
	複数の装置やプログラムなどが同じ資源を同時に利用しようとして競合状態になってしまうこと
	同時に複数の更新要求が発生し、内容が損なわれたり要求が拒絶されるなど正常に処理できない状態

環境
　開発環境（ローカル）
	実際のサーバーにアップする前に、サイトの動作や表示確認を手持ちのパソコン内で行うこと
　検証環境（ステージング）
	番環境に条件を限りなく近づけた「最終テスト用に用いる、本番環境と類似のテスト環境」
　本番環境
	実際にシステムが稼働している環境のこと

設計書／仕様書
　要件定義
	本格的な開発工程の前段階で、開発者の視点から要求をまとめ、具体的な進め方を決めること（ユーザーが何を必要としているかを定義したもの）
　基本設計書
	要件定義の内容を元に、システムを外から見たときどういう動きをするかを決めるもの（どのような画面になるかなど）
　詳細設計書
	基本設計で決められた動きを、どうやって実現するかを決めるもの

テスト
　単体テスト（UT）Unit Test
	プログラムを構成する比較的小さな単位（ユニット）が個々の機能を正しく果たしているかどうかを検証するテスト（モジュールごとにテスト）
　結合テスト（CT／IT）Integration Test
	単体で動作するようになったコンポーネントを組み合わせることで実際に動作する状態に近いソフトウェアの挙動を確認するテスト
　総合テスト（ST）System Test
	 構築したシステムが全体で予定通りの機能を満たしているか、また機能や性能が仕様書通りに構築できているかを検証するテスト（本番とほぼ同じ環境でテストを実施）
エビデンス／証跡
	テスト工程などでシステムが正しく動作している、あるいは不具合が生じたことを示す証拠となる書類やデータなどを指す
データパッチ（patch）
	ソフトウェアを構成するプログラムやデータを更新・修正するために、新しい版との相違点を抜き出したデータ（ソフトに変更を加えるために用意された、後付けのプログラム）
Access
	Microsoftが提供するデータベース管理ソフト　データベースの作成からデータの追加、更新、削除などの機能もあり、大規模なデータも取得しやすくデータ分析にも活用できる
マクロ
	関連する複数の操作や手順、命令などを一つにまとめ、必要に応じて呼び出すことができるようにする機能（録音再生のように、あらかじめ記録した操作を行うという機能）
　VBA（Visual Basic for Applications）
	Microsoft Officeに含まれるアプリケーションソフトの拡張機能　「簡易なプログラムを記述」して実行することで複雑な処理の自動化などを行なうことができるもの
GAS（Google Apps Script）
	JavaScriptベースのプログラミング言語　Google Appsの拡張や連携ができる
API（Application Programming Interface）
	アプリケーションやソフトウェアの構築と統合 (インテグレーション) に使われるツール、定義、プロトコル
　WEB API
	コンピュータプログラムの提供する機能を外部の別のプログラムから呼び出して利用するための手順・規約（API）の類型の一つ、HTTPなどWebの技術を用いて構築されたもの
　REST API
　SOAP
Ajax
　XML
　JSON
　ステータスコード
　クロスオリジン（Cross-Origin）／CORS（Cross-Origin Resource Sharing）
バリデーション

データ連携
　Daemon
　CRON
　バッチ
　ログ
　CSV
　TSV
プルリクエスト（マージリクエスト）

■ チケット管理ツール
asana
Backlog
Jooto
Readmine
Trello
■ バージョン管理
集中型
分散型
Github
Backlog
SourceTree
Tortoise SVN
Git Flow
master
release
develop
feature
■ FW／ライブラリ
FW
Spring Framework
Struts
JSF（Java Server Faces）
ライブラリ
Bootstrap
Flyway
Jackson
jQuery
Junit
Log4j
Lombok
ORM
■ 連絡ツール
ChatWork
Slack
IP Messenger
■ Java
Javadoc
アノテーション
メモリ管理
ヒープ
GC
GoF
デザインパターン
■ その他
オブジェクト指向
バッチ処理
コンパイル
カバレッジ
プラットホーム