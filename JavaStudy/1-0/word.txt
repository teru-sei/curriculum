■ IT
ITはコンピュータとネットワークを利用した技術の総称
・IT = Information Technologyの略　情報技術
・ICT = Information and Communication Technologyの略　情報通信科学

ITとICTはほぼ同義であるが
ICTはコミュニケーションが入っているので「個人からの情報発信」を強調するニュアンスがある

・IoT = Internet of Thingsの略
　インターネット経由でセンサーと通信機能を持ったモノ達

■ OS
・OS = Operating Systemの略
　システム全体を管理し、さまざまなアプリケーションソフトを動かすための最も基本ソフトウェア

・Windows　マイクロソフト社が開発したOS
・macOS (Mac OS X)　Appleが提供するMac用のOS
　macOSシリーズの遍歴は「Mac OS X」→「OS X」→「macOS」と変わっている


・UnixとLinux
　LinuxはもともとUnixを参考にして作られているためとても似ている

共通点
　CUI（Character User Interface）という文字（コマンド）中心のOS
　安定性が高い、低コスト、企業で使われることが多い

違い
・UNIX　Unixは企業が開発して、知的財産権が企業に属している（Unixという名前を使わなければ無料でも使える）
　macOS、カーナビや携帯電話などにも使われているOS

・Linux　Linuxはオープンソースでとにかく無料だし改変も配布も自由
　Amazon AWS、Raspberry、Androidなど

■ 言語・環境
・マークアップ／フロントエンド
　文章の論理的な構造や修飾情報に関する指定を文章とあわせてテキストファイルに記述するための言語
　SGMLやHTML、XHTMLなどがあり、コンピューター言語の一種
　マークアップエンジニアが主にHTMLを使うのに対し、
　フロントエンドエンジニアは、HTMLの他、JavaScript、CSS、PHPなど、さまざまな言語を使ってコーディングを行う。

・HTML = HyperText Markup Languageの略　ウェブページを作成するために開発された言語。
　　　　　HyperText = ハイパーリンクを埋め込むことができる高機能なテキスト
　　　　　Markup = 目印をつける　どのような役割を持っているのかを示す（見出し・段落・表・リストなど）
・CSS = Cascading Style Sheetsの略　ウェブページのスタイルを指定するための言語　HTMLと組み合わせて使用する言語
・JavaScript = ブラウザを「動かす」ためのプログラム言語　他のプログラミング言語と組み合わせて使うことで、ブラウザ上でアニメーションを動作させることができる。
　　　　　　　　Node.jsという、ブラウザ側だけでなくサーバー側でも動くJavaScriptも普及してきた。
・jQuery = JavaScriptのためのライブラリ 動的な表現を短いコードで簡単に実装できる
・Java SE = Java Platform, Standard Edition の略　Java で使用される API（Application Programming Interface の略） をまとめたもの
　　　　　　Java の機能やデータなどを利用するための呼び出し方を定義したもの
・サーバーサイド = サーバー側で動く何かを意味　フロントエンドからの依頼に適切な情報を渡す役割
　　　　　　　　　　サーバーサイド言語の代表例　PHP、Ruby、Java、Go、Pythonなど
・.NET（C#, VB） = 異なる言語で書かれたプログラムも共通中間言語にコンパイルされてから実行される仕組み。C#, VisualBasic, Pythonなど複数の言語が使用できる。
　　　　　　　　　　特定の言語への依存性が低い特徴があるので、使える言語の少ないエンジニアでも生産性の向上が見込める
・Java = JavaはC言語をベースに開発されたプログラミング言語　IT市場を牽引するGoogleが開発に用いる三大言語（Java、C++、Python）の一つ
　　　　　デスクトップ向けのアプリの他、Webサービスの開発やAndroid向けのスマホアプリ、金融機関の基幹システム、カーナビや家電の組み込み、IoT機器にも採用されている。
・Java SE = Java Standard Editionの略　「Javaの基本機能をまとめたもの」　パソコン上で動作するゲームや便利なソフトを作ることができる。
・Java EE（Jakarta EE） = Java Enterprise Editionの略　「JavaSEを元にしてサーバーサイドの機能を追加したもの」　「JavaSE+拡張機能」といった構成になっている。
　　　　　　　　　　　　　主にWebサイト（もしくはWebアプリケーション）を開発する際に用いられる。
・Perl = 強力な文字列処理能力を持つ、テキストの整形や出力に最適化されたスクリプト言語
　　　　　文法の自由度が高い、構文の記述方法が簡単、簡潔にコーディング可能、高い後方互換性を保持、などの特徴がある。
・PHP = Hypertext Preprocessor 動的なコンテンツの作成に向いているプログラミング言語　スクリプト言語
　　　　CやC++などのプログラミング言語を一括コンパイルせず、実行時に一行ずつコンパイルするため、コーディングしてすぐ動作の確認が可能（インタプリタ言語）
・Ruby = アプリケーションソフトウェアを作成するためのプログラミング言語　Webサービスやアプリケーションの作成　スクリプト言語

■ サーバーソフト
　Webサーバーソフトウェア =（Webサーバーサービスとも呼ばれ、PCやスマホなどからの要求に応じてファイルや画像をWebサイトとして表示する機能を持っている。）
特徴
・Apache = 安全性、豊富な情報　　主な機能　モジュールによる機能追加
・nginx = 高速性　　主な機能　リバースプロキシ、負荷分散、FastCGIサポート
・IIS = Windowsサーバー専用　コマンドを覚えず視覚的に操作可能　　主な機能　FTP、アプリケーション開発(.NET ASP.NETなど)

■ SQL
・SQL = RDBMS（SQLを利用してリレーショナルデータベースを管理するシステム）のソフトウェアを操作・制御する国際標準のデータベース言語
データベースに対して行える操作
　データの検索、追加、更新、削除、作成　テーブルの削除、主キーの設定　ユーザー権限の付与
・DB2 = IBM社が提供するRDBMS  AIXをはじめ、Unix、Linux、Windowsなど幅広いプラットフォームに対応している　特徴:自由度の高い環境、アーキテクチャ、ワークロード管理など
・MySQL = Oracleが開発してサポートするオープンソースのSQLリレーショナルデータベース管理システム　データベースの一種
・Maria DB = MySQLから派生したレーショナルデータベースです。MySQLのソースコードをベースにして、新機能追加やソースコードの改善が組み込まれている。
・Oracle DB = Oracle社が提供しているRDBMS　特徴:高い堅牢性　行レベルでの排他制御「行レベル・ロック」を行うことで、同時に多くのユーザーが利用できる
　検索時点のデータを読み取ることが保証される「読み取り一貫性」　パフォーマンスの向上、機能拡張などビジネスニーズを満たす機能
・PostgreSQL（ポストグレスキューエル） = オープンソースのRDBMS　Linux、macOSといったUNIX系OSとWindowsにも対応している。
・SQLite = オープンソースで軽量のRDBMS　簡易的なデータベースであり、サーバーとしてではなくアプリケーションに組み込むことで利用
　　　　　特徴:設定不要な自己完結システム　マルチプラットフォーム　データ型の指定を強制しない
・SQL Server = 正式名称 Microsoft SQL Server　Microsoft社が開発したRDBMS　
　　　　　　　特徴:データベースを視覚的に操作する「GUI」が利用できる。　独自拡張の「Transact-SQL」が使える　システム規模に合わせたエディションが豊富
・CRUD = 永続的なデータを取り扱うソフトウェアに要求される4つの基本機能　データの作成（Create）、読み出し（Read）、更新（Update）、削除（Delete）
・トランザクション = データベース処理などで関連する「複数の処理をひとつにまとめたもの」を意味する。
・コミット = 処理の反映や変更を確定させるといった意味
・ロールバック = システム障害やデータの喪失、破損などが起きた際に、以前に正常に稼働していたある時点の状態に戻して復旧を試みることを指す。
・排他制御（排他ロック） = 同時に複数のユーザーがアクセスできるファイルやデータベースにおいて、一方が処理中の場合他方のアクセスを制限すること。データの整合性を保つため。
・楽観ロック = めったなことでは他者との同時更新は起きないであろう、という楽観的な前提の排他制御
　　　　　　　データそのものに対してロックは行わずに、更新対象のデータがデータ取得時と同じ状態であることを確認してから更新することで、データの整合性を保証する方式
・悲観ロック = 他者が同じデータに頻繁に変更を加えるであろう、という悲観的な前提の排他制御
　　　　　　　更新対象のデータを取得する際にロックをかけることで、他のトランザクションから更新されないようにする方式
・実行計画 = 「SQLを実行するための計画　どうしたらより短い時間でSQLを実行できるか、計算して導き出された、具体的な方法を「計画」としてまとめたもの
・チューニング = 性能の悪いSQLを発見し、その処理過程を改善することを指す。性能の良いSQLとは端的に言えば、少ないリソースで処理を行うことができるSQL
　　　　　　　　SQLチューニングが必要な状態とは、アプリケーションのパフォーマンスに問題がある状態
・パフォーマンス = アプリケーションなどを使う上での処理性能や実行速度など
・スロークエリ = DBMSに対する問い合わせ（クエリ）のうち、一定の基準に照らして遅い、時間がかかっているもの。システム性能の制約となるボトルネックとなっている可能性が高い箇所。
・クエリログ = クライアントからの MySQL Server への接続・接続解除の情報、およびクライアントから実行された全ての SQL クエリを出力してくれるログ
　　　　　　　　 SQL 実行エラーが発生した際に、どのような SQL が実行されたのかを正確に把握するのに役に立つ。
・IDE（統合開発環境） = Integrated Development Environmentの略　ソースコードを記述するエディタ、ソースコードからプログラムを生成するコンパイラ、
　　　　　　　　　　　　コードの不正を発見・修正するデバッガなどのプログラム開発ツールをひとまとめにした開発環境
　　　　　　　　　定義：テキストエディタやGUIを介してプログラミング機能を提供する　コンパイル、デバッグ、バージョン管理、デプロイなど１つのIDE上で実行できる
　IDE各種
・Eclipse = Javaでの開発でよく使われる。　特徴:開発の効率化、標準でJavaの開発環境が含まれている、プラグインを導入することでさまざまな言語が使える
　　　　　　　　　　　　　　　　　　　　　　　便利なプラグインが豊富、開発支援機能、コード編集機能
・NetBeans = プロジェクト管理機能や入力支援機能を備えたオープンソースのIDE　特徴:開発に必要な機能がそろっている、GUIアプリケーションをデザインを確かめながら開発を進められる。
・SpringToolSuite = Spring Framwrowkの開発元が提供しているEclipseをベースとして作成されたIDE

・DBツール = 、データベース管理タスクに使用できるツール、ユーティリティおよび補助ツールの総称　1つのデータベース・ツールですべてのデータベース管理タスクを実行することはできない。
・A5:SQL Mk-2 = データベース開発において生産性を向上させるべく開発されたSQL開発ツール　SQLの実行・テーブルの編集・ストアドプロシージャの実行・ER図の作成などができる
・pgAdmin = PostgreSQLの管理ツールの一つで、ネットワークを通じて遠隔のデータベースサーバをGUIで管理することができるもの
・DBeaver = DBeaverはほぼ全てのDBに対応したSQLクライアントツール　GUIクライアントならではの機能が豊富に搭載されている
・MySQL Workbench = データベースアーキテクト、開発者、DBA のための統合ビジュアルツール　Windows、Linux、Mac OS X で利用可能
　　　　　　　　　　データ・モデリング、SQL 開発、およびサーバー設定、ユーザー管理、バックアップなどの包括的な管理ツールを提供
・Sequel Pro = データベースをExcelのような表で確認・編集をすることができるMac専用のアプリ
・TeamSQL = DBをGUIで管理する為のソフトウェアのひとつ　特徴:対応しているDB種別が多い、SQLの実行履歴が残る、拡張機能がインストール可能、自由にチームを作成することができる

■ 肩書
PM　プロジェクトマネージャー　プロジェクトの管理をする役割
PL　プロジェクトリーダー　PMの立てた計画に沿って、プロジェクト全体を率いていくこと
PG（PE）　プログラマー　SEの手足となって、SEが用意した仕様書をもとにプログラミング・単体テストをするのが主な作業
SE　システムエンジニア　開発メンバーの一員としてPMが作成した工程表に沿って、自分の担当業務をこなす。
デザイナー　クライアント (依頼者) の求めるデザインを考察する仕事
エンジニア　工学（エンジニアリング）に関する専門的な知識やスキルを持った人材
フロントエンド・エンジニア　一般的にウェブサイトやアプリのフロントエンド側（ユーザーとウェブサイトが直接接触する要素）の設計・構築・カスタマイズを行うエンジニア
サーバーサイド・エンジニア　サーバー側で動作するプログラムの開発やデータ処理などを行うエンジニア
バックエンド・エンジニア　サーバサイド全般を取り扱うエンジニアのことで、「サーバ構築」と「サーバサイドプログラム開発」が主に行うエンジニア

■ UI（ユーザーインターフェース）
UI　ユーザーと製品やサービスとのインターフェース（接点）すべてのことを意味する。WebサイトでいうところのUIは、サイトの見た目や、使いやすさを指す。
CUI　Character User Interfaceの略　あらかじめ決まっている文字や命令を コマンドといい、コマンドを入力して行う
GUI　Graphical User Interfaceの略　コンピューターの画面上に表示されるウィンドウやアイコン、ボタン、プルダウンメニューなどを使い、マウスなどのポインティングデバイスで操作できる

■ ファイル／ディレクトリ
ファイル　コンピュータにおけるデータの管理単位の一つ。ストレージ装置（外部記憶装置）などにデータを記録する際に利用者やOSから見て最小の記録単位となるデータのまとまり
拡張子　ファイルの種類を識別するためにファイル名の末尾につけられる文字列
ディレクトリ　ファイルを分類・管理するための概念、ファイルを格納する入れ物のこと
ルート・ディレクトリ　ファイル階層における最初または最上位のディレクトリ
カレント・ディレクトリ　ユーザーが現時点で作業を行なっているディレクトリ
パス　パソコンの中に保存されているファイルやフォルダーなどのデータの保存場所を示す経路
絶対パス　ルート・ディレクトリからの位置関係を記述する方法
相対パス　カレント・ディレクトリから対象のファイルまでの道順を記述する方法

■ ネットワーク
LAN　Local Area Networkの略　一定の限定されたエリアで接続できるネットワーク
WAN　Wide Area Networkの略　遠く離れたエリアとつながったネットワーク（LANとLANをつないだワイドなネットワーク）
クライアント　他のコンピュータやソフトウェアから機能や情報の提供を受けるコンピュータやソフトウェアのこと
サーバー　ネットワーク上のコンピュータの中で、クライアントから要求や指示を受け、情報や処理結果を返す役割を持つコンピュータやソフトウェアのこと

■ 各種プロトコル
HTTP　Hyper Text Transfer Protocolの略　WWW(World Wide Web)上でWebサーバとクライアントが、 HTMLで書かれた文書などの情報をやりとりする時に使われる通信手順(プロトコル)
FTP　File Transfer Protocolの略　サーバとクライアントの間でファイル転送を行う際に必要となる通信プロトコル
HTTPS　Hypertext Transfer Protocol Secureの略　通信内容が暗号化される（HTTPは暗号化されない）
SSL　Secure Sockets Layerの略　インターネット上におけるウェブブラウザとウェブサーバ間でのデータの通信を暗号化し、送受信させる仕組み
SSH　Secure Shellの略　リモートコンピュータと通信するためのプロトコル　公開鍵暗号を利用し共通鍵を暗号化して鍵交換を行う。通信自体は高速な共通鍵暗号を用いているため、速度低下を抑えている。
ポート、ポート番号　ポートとはネットワークでデータを通信するための扉のようなもの　ポート番号はその扉の番号
HTTP、FTP、SSHの各ポート番号　HTTP 80　FTP 21　SSH　22
ファイアウォール　企業などの内部ネットワークをインターネットを通して侵入してくる不正なアクセスから守るための“防火壁”
TCP　Transmission Control Protocolの略　IPと同様にインターネットにおいて標準的に利用されているプロトコル。IPの上位プロトコルでトランスポート層で動作する

■ IPアドレス
IPアドレス　ネットワーク上の機器に割り当てられるインターネット上の住所のような存在　送信元や送信先の識別に使われる番号
グローバルIPアドレス　（パブリックIPアドレス）　インターネットを利用するときに割り振られるIPアドレス
プライベートIPアドレス　社内LANなど小規模なネットワークで使用されるIPアドレス

■ ドメイン
ドメイン　「インターネット上の住所」のことで、Webサイトがどこにあるかを判別する情報　https://「muumuu-domain.com」の部分がドメイン
DNS　Domain Name Systemの略　ドメインとIPアドレスを対応付けて管理するシステム
VPN　Virtual Private Networkの略　インターネット上に仮想の専用線を設け、盗み見や改ざんなどの脅威から大切な情報を守ることができる
ブリッジ　同一ネットワーク内の2つのセグメントをつなぐために使われる中継器　流れてきたパケットの「MACアドレス情報」を確認し、必要があれば他のセグメントへとパケットを流す役割を持つ
プロキシサーバー　インターネットへのアクセスを代理で行うサーバー　プロキシサーバーが代わりに目的のサイトにアクセスしてデータを受け取りブラウザにデータを渡して表示させる

■ 電子メール
SMTP　Simple Mail Transfer Protocolの略　メールを送信する仕組み
POP　Post Office Protocolの略　メールを受信する仕組み
IMAP　Internet Message Access Protocolの略　POPと同じ、メールを取り込むための手順で違いは、メールをサーバーに残すか残さないか
　　　IMAPでは、ダウンロードするのはメールのいわばコピー（キャッシュ）でメール本体はサーバーにいつまでも残ったままでユーザーのメールはサーバーが管理してくれる

■ セッションとクッキー
セッション　通信の開始から終了までを指す　クライアントからサーバーへ接続した時点でセッションが始まり、サーバーから切断するとセッションが終了する
クッキー　Webサイトとユーザー間でやり取り・保存されるアクセス情報　保存された情報は再度サイトにアクセスした際に自動的に呼び出され、サイト利用をスムーズにするために使われる
キャッシュ　低速な記憶装置や伝送路から読み出したデータのうち、直近に読み込んだものや使用頻度が高いものを高速な記憶装置に複製しておくこと

■ DB（データベース）について
インデックス　書籍の巻末の索引のように、多数のものの中から特定の対象をすばやく見つけ出すため識別情報や、整列された所在情報の一覧などを指す

■ テストについて
フロー　コンピュータプログラムを構成する命令や手続き、処理の流れなどのこと

■ チケット管理ツール
タスク　コンピューターが処理するプログラムの処理単位　複数のアプリケーションを起動しながら作業することができ、指示した処理が終了するのを待たずに別の処理を行えるため、作業効率が向上する

■ バージョン管理
Git　オープンソースの分散バージョン管理システムの一つ　 複数の開発者が共同で一つのソフトウェアを開発する際などに、ソースコードやドキュメントなどの編集履歴を統一的に管理するのに用いる
SVN　Subversionの略　オープンソースのバージョン管理システムでファイルの変更履歴を管理してくれるシステムの一つ
デグレ　デグレード(degrade)の略　プログラム修正やインフラ設定の変更等の失敗により、今まで正常に動作していた機能が動かなくなるという恐怖のトラブル
マージツール　MDLファイル（テキスト形式で保存され、典型的には、オブジェクトのリストが含まれるファイル）中の既存のマップ式を保持しながら，
　　　　　　　FDLファイル（入力データ，出力データのデータの構造に基づいてフォーマットを作成、定義したフォーマットをファイルとして保存したもの）又は
　　　　　　　DTDファイル（XHTML、HTML、XML、またはSGMLファイルによって使用される要素に関する情報を含むテキストファイル）の変更内容をMDLファイルにマージする機能
